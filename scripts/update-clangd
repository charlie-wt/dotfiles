#!/usr/bin/env bash

source "$DOTFILES/bash/_utils.bash"

required_arch="x86_64"
if [ "$(uname -p)" != "$required_arch" ]; then
    >&2 error "this method only supports "$required_arch", but you're running $(uname -p)"
    exit 1
fi

github_repo="clangd/clangd"
destination="$HOME/src/bin"

# get version number
json_version_tag="tag_name"

info="$(curl -s -S https://api.github.com/repos/$github_repo/releases/latest)"
if [ $? -ne 0 ]; then
    >&2 error "error getting latest version info via curl."
    exit 1
fi

rate_limit_msg="API rate limit exceeded"
if echo "$info" | grep "$rate_limit_msg" >/dev/null 2>&1; then
    >&2 error "GitHub API rate limit exceeded."
    exit 1
fi

version="$(echo "$info" | grep "$json_version_tag" | sed 's/.*"'$json_version_tag'":\s*"\([0-9A-Za-z_\.]\+\)".*/\1/')"
have-cmd clangd && local_version="$(clangd --version | head -n 1 | sed 's/clangd version \([0-9\.]\+\) .*/\1/')"

if [ "$version" == "$local_version" ]; then
    info "latest version $version matches locally-installed version; not downloading."
    exit 0
fi

# download release to temp dir
filename="clangd-linux-$version"

tmpdir=$(mktemp -d)

url="https://github.com/$github_repo/releases/download/$version/$filename.zip"
if ! wget "$url" --directory-prefix="$tmpdir" -o "$tmpdir/wget_log"; then
    >&2 error "error downloading package:"
    >&2 cat "$tmpdir/wget_log"
    rm -r "$tmpdir"
    exit 1
fi

# extract the release to the right place
mkdir -p "$destination"

zip_file="$tmpdir/$filename.zip"
if ! unzip -q "$zip_file" -d "$tmpdir"; then
    >&2 error "error unzipping package from $zip_file"
    rm -r "$tmpdir"
    exit 1
fi

[ -d "$destination/clangd" ] && rm -r "$destination/clangd"
mv "$tmpdir/clangd_$version" "$destination/clangd"

rm -r "$tmpdir"

if [ -n "$local_version" ]; then
    echo "updated $(info-col "$local_version") -> $(info-col "$version")"
else
    echo "installed clangd $(info-col "$version")"
fi