# if there's an automatically generated bashrc with stuff in it
if [ -f ~/dotfiles/.bashrc.auto ]; then
    . ~/dotfiles/.bashrc.auto
fi

### MY STUFF ###
## aliases:
# rf -> rifle (open file with suitable program)
alias rf=rifle
# quick name for ranger (and when it exits, bash gets put into what ranger's directory was)
alias rgr='ranger --choosedir=$HOME/.rangerdir; LASTDIR=`cat $HOME/.rangerdir`; cd "$LASTDIR"'
# why is python 2 the default anywhere any more
alias python=/usr/bin/python3
alias pip=/usr/bin/pip3
# shorter clear
alias c=clear
# clear & ls
alias cl='clear && ls'
# qmake
alias qm='qmake -spec linux-g++ CONFIG+=debug CONFIG+=qml_debug'
# xclip into system (ctrl+c/v) clipboard
alias xcl='xclip -sel clip'
# nicer git log (shows branches etc.)
alias gll="git log --graph --oneline --abbrev-commit --decorate --all"
# vim
alias v=vim
# git
alias g=git
# quickly list tagged todo comments as made by the corresponding vimrc functions
alias todos='grep -EInr "\s*(#|//|/\*|\")\sTODO\s*#"'
# edit the shelf
alias shelf='vim ~/Documents/shelf.md'
# edit this month's goals
alias goals='vim ~/$(date +%Y)/$(date +%B | tr A-Z a-z).md'
## my scripts:
export PATH=$PATH:~/.bin
# pip stuff
export PATH=$PATH:~/.local/bin

## functions:
mkcd () { mkdir "$@" && cd "$@"; }
# Easy way to extract archives
extract () {
   if [ -f $1 ] ; then
       case $1 in
           *.tar.bz2)   tar xvjf $1    ;;
           *.tar.gz)    tar xvzf $1    ;;
           *.bz2)       bunzip2 $1     ;;
           *.rar)       unrar x $1     ;;
           *.gz)        gunzip $1      ;;
           *.tar)       tar xvf $1     ;;
           *.tbz2)      tar xvjf $1    ;;
           *.tgz)       tar xvzf $1    ;;
           *.zip)       unzip $1       ;;
           *.Z)         uncompress $1  ;;
           *.7z)        7z x $1        ;;
           *)           echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
}

# Quick way to do simple compilations & run, for small bits of (normally) test code.
mkrn () {
   case ${1##*.} in
      c)   gcc -Wall -o ${1%.*} $1 && ./${1%.*} ;;
      cc)  g++ -Wall -o ${1%.*} $1 && ./${1%.*} ;;
      cpp) g++ -Wall -o ${1%.*} $1 && ./${1%.*} ;;
      C)   g++ -Wall -o ${1%.*} $1 && ./${1%.*} ;;
      py)  python $1                            ;;
      js)  node $1                              ;;
      *)   echo "unknown filetype '${1##*.}'." ;;
   esac
}

# Move 'up' so many directories instead of using several cd ../../, etc.
up () { cd $(eval printf '../'%.0s {1..$1}); }

# basically an alias
gip () { get-iplayer --modes=best --pid=$1; }

# get folder size of current directory (and size of constituent directories)
# by default lists 25 constituent directories. can give it a number argument
# to list that many directories (including the total), or 'all', to list every
# constituent directory.
size () {
   size=26
   if [ $# -ge 1 ] ; then
      size=$1
   fi
   if [ $size == "all" ] ; then
      du -ahd1 | sort -hr
   else
      du -ahd1 | sort -hr | head -n $size
   fi
}

## environment variables:
# cuda
export PATH=/usr/local/cuda-9.0/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-9.0/extras/CUPTI/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
COLORTERM=truecolor
# making vim the default text editor
VISUAL=vim; export VISUAL EDITOR=vim; export EDITOR
# Add color in manpages for less
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

## programs
# get autocompletion for vcstool
if [ -f /usr/share/vcstool-completion/vcs.bash ]; then
    source /usr/share/vcstool-completion/vcs.bash
elif [ -f /usr/local/share/vcstool-completion/vcs.bash ]; then
    source /usr/local/share/vcstool-completion/vcs.bash
fi
# tmuxinator
source ~/.bin/tmuxinator.bash
